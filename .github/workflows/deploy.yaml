name: Build, Push, and Deploy to Kubernetes

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      branch:
        description: 'The branch to build and deploy'
        required: true
        default: 'main'
env:
  # Using GitHub Container Registry (ghcr.io)
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/${{ github.event.repository.name }}

  # --- Helm Configuration ---
  CHART_PATH: ./helm-chart
  RELEASE_NAME: buzzcore
  NAMESPACE: buzzcore

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || github.ref }}

      - name: Set up QEMU for multi-platform builds
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: type=sha,prefix=,format=short

      - name: Build and push multi-platform Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64 # Your desired platforms
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Use Gradle cache for faster builds
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # --- Deployment Steps ---
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.13.1'

      - name: Set up Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Deploy with Helm
        run: |
          helm upgrade --install ${{ env.RELEASE_NAME }} ${{ env.CHART_PATH }} \
            --namespace ${{ env.NAMESPACE }} \
            --set image.repository=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} \
            --set image.tag=${{ steps.meta.outputs.version }} \
            --atomic \
            --wait